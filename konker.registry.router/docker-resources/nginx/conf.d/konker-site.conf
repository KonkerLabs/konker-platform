server {

  listen       80 default_server;
  #listen       443 ssl;

  server_name router.staging.konkerlabs.net;
  set $my_scheme $scheme;
  if ($http_x_forwarded_proto = "https") {
    set $my_scheme "https";
  }

  # for generating lets encrypt certificates
  location /.well-known/acme-challenge/ {
    alias /var/www/challenges/;
    try_files $uri =404;
  }

  location = /favicon.ico {
    log_not_found off;
  }

  location / {
    return 404;
  }

  location /registry-router/status/ {
    proxy_pass  http://127.0.0.1:8080/registry-router/status/;
  }

  location ~ ^/(pub|sub|cfg)/(.*)$ {
    rewrite ^/(pub|sub|cfg)/(.*)$ /registry-router/$1/$2;
  }

  location /registry-router/pub/ {
    proxy_pass  http://127.0.0.1:8080/registry-router/pub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  location /registry-router/sub/ {
    proxy_pass  http://127.0.0.1:8080/registry-router/sub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  location /registry-router/cfg/ {
    proxy_pass  http://127.0.0.1:8080/registry-router/cfg/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  # gateway
  location ~ ^/gateway/(pub)$ {
    proxy_pass  http://127.0.0.1:8080/registry-router/gateway/$1;
  }

  # application
  location ^/(.*)/(.*)/pub {
    rewrite ^/(.*)$/(.*)$/pub /registry-router/$1/$2/$3;
  }

}

