server {
  listen       80;
  server_name localhost;

  # for lets ecnrypt certificate generation
  location /.well-known/acme-challenge/ {
    alias /var/www/challenges/;
    try_files $uri =404;
  }

  location / {
    rewrite ^\/$ /registry/  redirect;
    proxy_pass      http://127.0.0.1:8080/;
      proxy_set_header Host $http_host; ## avoid CORS errors;
    proxy_intercept_errors on;
  }

  location /resources/konker/images/ {
    rewrite ^/(.*) /registry/$1  last;
  }

  location ~ ^/(pub|sub)/(.*)$ {
    rewrite ^/(pub|sub)/(.*)$ /registry-data/$1/$2;
  }

  location ~ ^/registry/(pub|sub)/(.*)$ {
    rewrite ^/registry/(pub|sub)/(.*)$ /registry-data/$1/$2;
  }

  location /registry-data/pub/ {
    proxy_pass  http://127.0.0.1:9090/registry-data/pub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
  }

  location /registry-data/sub/ {
    proxy_pass  http://127.0.0.1:9090/registry-data/sub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
  }

  location /registry-router/status/ {
    proxy_pass  http://127.0.0.1:9091/registry-router/status/;
  }

  location /registry-router/pub/ {
    proxy_pass  http://127.0.0.1:9091/registry-router/pub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  location /registry-router/sub/ {
    proxy_pass  http://127.0.0.1:9091/registry-router/sub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  location /registry-router/cfg/ {
    proxy_pass  http://127.0.0.1:9091/registry-router/cfg/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  location /registry-api/ {
    proxy_pass  http://127.0.0.1:8080/v1/swagger-ui.html;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  location /rabbitmq/ {
    proxy_pass  http://127.0.0.1:15672;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  error_page 500 502 503 504 @error500;
  location @error500 {
    root /usr/share/nginx/html;

    set $error500 /custom_50x.html;

    if ($http_accept_language ~ "pt-br") {
      set $error500 /custom_pt_50x.html;
    }
    rewrite ^(.*)$ $error500 break;
  }

  location /testing {
    fastcgi_pass unix:/does/not/exist;
  }

  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
}

server {
  listen       80;
  #listen       443 ssl;

  server_name  www.localhost.konkerlabs.net;
  return 301 $scheme://localhost$request_uri;
}
