server {
  listen       80 default_server;
  #listen       443 ssl;

  server_name staging.konkerlabs.net;
  set $my_scheme $scheme;
  if ($http_x_forwarded_proto = "https") {
    set $my_scheme "https";
  }

  # for lets encrypt certificate generation
  location /.well-known/acme-challenge/ {
    alias /var/www/challenges/;
    try_files $uri =404;
  }

  location / {
    rewrite ^\/$ /registry/  redirect;
    proxy_pass      http://127.0.0.1:8080/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
}

server {
  listen       80;
  #listen       443 ssl;

  server_name  www.staging.konkerlabs.net;
  return 301 $scheme://staging.konkerlabs.net$request_uri;
}

server {

  listen       80;
  #listen      443 ssl;
  server_name  api.staging.konkerlabs.net data.staging.konkerlabs.net ~^\w+-(api|data)\.konkerlabs.net$;
  set $my_scheme $scheme;
  if ($http_x_forwarded_proto = "https") {
    set $my_scheme "https";
  }

  # for generating lets encrypt certificates
  location /.well-known/acme-challenge/ {
    alias /var/www/challenges/;
    try_files $uri =404;
  }

  location / {
    return 404;
  }

  location ~ ^/(pub|sub)/(.*)$ {
    rewrite ^/(pub|sub)/(.*)$ /registry/$1/$2;
  }

  location /registry/pub/ {
    proxy_pass  http://127.0.0.1:8080/registry/pub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

  location /registry/sub/ {
    proxy_pass  http://127.0.0.1:8080/registry/sub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    proxy_set_header Origin "";
    proxy_redirect  http:// $my_scheme://;
  }

}
