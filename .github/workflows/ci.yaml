name: Build
on:
  push:
    branches-ignore:
      - 'master'
jobs:
#  test:
#    name: Compile and Test (JDK 8)
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Maven Package
#        run: mvn clean package -DskipTests
#      - name: Maven Verify
#        run: mvn clean verify -DskipTests
#      - name: Test
#        run: mvn clean test
#  artifact:
#    name: Publish Artifact
#    runs-on: ubuntu-latest
#    needs: [ test ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Publish artifact on GitHub Packages
#        run: mvn -B clean deploy -DskipTests
#        env:
#          GITHUB_TOKEN: ${{ secrets.MVNDEPLOYTOKEN }}

  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    #needs: [ test ]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish artifact on GitHub Packages
        run: mvn -DskipTests=true package install
      - uses: actions/checkout@v1
      - name: Docker Hub Sign-in
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Preparing api build
        run: cd konker.registry.api && mkdir -p docker-resources/dist && cp /home/runner/work/konker-platform/konker-platform/konker.registry.api/target/registry-api.jar docker-resources/dist/registry-api.jar && docker build -t $REPO:latest -t $REPO:konker.registry.api-${GITHUB_RUN_ID} .
      - name: Publish Docker Image
        run: docker push $REPO